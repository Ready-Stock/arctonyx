syntax = "proto3";

package arctonyx;

service ClusterService {
    rpc SendCommand (Command) returns (CommandResponse) {}
    rpc GetNodeID (GetNodeIdRequest) returns (GetNodeIdResponse) {}
    rpc Join (JoinRequest) returns (JoinResponse) {}
    rpc GetSequenceChunk (sequenceChunkRequest) returns (sequenceChunkResponse) {}
}

message GetNodeIdRequest {

}

message GetNodeIdResponse {
    uint64 node_id = 1;
}

enum Operation {
    GET = 0;
    SET = 1;
    DELETE = 2;
}

message Command {
    Operation operation = 1;
    uint64 timestamp = 2;
    bytes key = 3;
    bytes value = 4;
}

message CommandResponse {
    Operation operation = 1;
    bool is_success = 2;
    string error_message = 3;
    bytes value = 4;
    uint64 timestamp = 5;
    uint64 applied_timestamp = 6;
}

message JoinRequest {
    string raft_address = 1;
    uint64 id = 2;
}

message JoinResponse {
    bool is_success = 1;
    string error_message = 2;
}

message Peer {
    uint64 node_id = 1;
    string raft_addr = 2;
}

message sequenceChunkRequest {
    string sequence_name = 1;
}

message sequenceChunkResponse {
    string sequence_name = 1;
    uint64 start = 2;
    uint64 end = 3;
    uint64 offset = 4;
    uint64 count = 5;
}

message sequence {
    uint64 current_value = 1;
    uint64 last_partition_index = 2;
    uint64 max_partition_index = 3;
    uint64 partitions = 4;
}